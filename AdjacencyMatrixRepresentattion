#include<bits/stdc++.h>
using namepace std;

int N = 1e9+10;
int G[N][N];
int main()
{   
    int n,m,wt;
    cin>>n>>m>>wt;

    for(int i=0;i<m;i++)
    {
        int v1,v2;
        cin>>v1>>v2;
        G[v1][v2] = wt;
        G[v2][v1] = wt;
    }
    return 0;
}

//Disadvantage
//SPACE COMPLEXITY
// O(N^2) 
// N = 10^5
// SPACE = 10^5 * 10^5.
// We can't allocate such amount of contiguos memeory as array.
// So we need some other representation as matrix thingy doesn't work.


//Advantage
// i,j connected? i,j weight?

// if(Graph[i][j]==1)
// {
//     cout<<"connected";
// }

// O(1)

//i, j weight
// G[i][j]   ---> O(1)
